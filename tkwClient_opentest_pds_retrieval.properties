# TKS ITK Trunk Client properties file
# Richard Robinson
# 20150421
#
#
#
# A name for this particular configuration, used for logging
#
tks.configname	PDS 8B Retrieval for OpenTest vpn-client-1003
#
# The name of the user or organisation, used for logging (should be set by the installer)
#
tks.username simonfarrow
#
# Do we listen for or send over TLS ?
#
tks.receivetls Yes
# suspect this is ignored in favour of spinetools cleartext setting
tks.sendtls Yes
#
# If we do, these govern the keystore and CA locations and access
#
#tks.tls.truststore	TKW_ROOT/config/SPINE_ITKTrunk_Client/certs/opentest.jks
tks.tls.truststore	/mnt/encrypted/home/simonfarrow/Documents/certs/OpenTest/OpenTestCerts_4/opentest.jks
tks.tls.trustpassword	password
#tks.tls.keystore	TKW_ROOT/config/SPINE_ITKTrunk_Client/certs/vpn-client-003.opentest.hscic.gov.uk.jks
tks.tls.keystore	/mnt/encrypted/home/simonfarrow/Documents/certs/OpenTest/OpenTestCerts_4/vpn-client-1003.opentest.hscic.gov.uk.jks
tks.tls.keystorepassword	password
#
# Mutual Authentication 
#
tks.tls.servermutualauthentication Yes
#tks.tls.ma.filterclientsubjectdn 
tks.tls.clientmutualauthentication Yes
#
# Directory for the loggers
#
tks.logdir TKW_ROOT/config/SPINE_ITKTrunk_Client/logs
tks.savedmessages TKW_ROOT/config/SPINE_ITKTrunk_Client/simulator_saved_messages
#
# Definitions needed by the simulator service itself. Listen on 0.0.0.0 for all available 
# interfaces. There is no "default" port, so one must be set.
#
# Acceptable transports are "HttpTransport", "MllpTransport", "SpineToolsTransport"
tks.transportlist SpineToolsTransport
#
tks.SpineToolsTransport.listenaddr 0.0.0.0
tks.SpineToolsTransport.listenport 4430
#
tks.delivery.routingfile	TKW_ROOT/config/SPINE_ITKTrunk_Client/simulator_config/test_routing_file.txt
# Properties for using the transmitter functions
# Context paths/port names avaialable for use in addition to any set within this configuration are BADURI, syncsoap, asyncsoap
# (These are set within the TKW tool)
# Signature stuff
#
tks.signer.alwaysacceptsignature Yes
tks.signer.storepassword password
tks.signer.keypassword password
tks.signer.keystore	TKW_ROOT/config/SPINE_ITKTrunk_Client/certs/testkeystore.jks
tks.signer.keyalias	tks_server
tks.signer.showreference	No
tks.signer.digestalgorithm SHA-1
tks.signer.mustunderstandsecurity No
# Acceptable transmitter modes are "Http" "Mllp" "SpineTools"
tks.transmitter.mode SpineTools
tks.transmitter.source TKW_ROOT/config/SPINE_ITKTrunk_Client/transmitter_source_for_opentest_retrieval
tks.sender.destination	TKW_ROOT/config/SPINE_ITKTrunk_Client/transmitter_sent_messages
tks.transmitter.timetolive 600
tks.transmitter.nosend No
tks.transmitter.send.url	http://127.0.0.1:443/reliablemessaging/reliablerequest
tks.transmitter.replyto.url	http://127.0.0.1:4444/spinesyncsoap
tks.transmitter.faultto.url	http://127.0.0.1:4444/spinesyncsoap
tks.transmitter.includesigner	Yes
#
# Debug options
#
tks.debug.redirecttransformerrors	Yes
tks.debug.displaydigestvalues	No
#
#
# SpineTools TMS Properties - SDS entries must be cached for cleartext mode to work
tkw.spine-test.cleartext No
#
tks.spinetools.sds.cachedir	TKW_ROOT/config/SPINE_ITKTrunk_Client/transmitter_source_for_opentest_pds/cache
tks.spinetools.sds.myasid	918999199496
tks.spinetools.sds.mypartykey	A21481-9199496
# SDS
tks.spinetools.sds.urlresolver	TKW_ROOT/config/SPINE_ITKTrunk_Client/urlresolver_opentest.txt
tks.spinetools.sds.url	ldap://192.168.128.11:389
#
tks.spinetools.messaging.retrytimerperiod 20000
tks.spinetools.messaging.authorrole S0080:G0450:R5080
tks.spinetools.messaging.authoruid 687227875014
tks.spinetools.messaging.authorurp 012345678901
tks.spinetools.connection.myip 10.0.224.15
# Filesystem locations
tks.spinetools.messaging.messagedirectory TKW_ROOT/config/SPINE_ITKTrunk_Client/transmitter_source/MessageSpool
tks.spinetools.messaging.expireddirectory TKW_ROOT/config/SPINE_ITKTrunk_Client/transmitter_source/ExpiredMessages
tks.spinetools.messaging.persistdurations TKW_ROOT/config/SPINE_ITKTrunk_Client/persistDurations.txt
#
tks.spinetools.messaging.defaultebxmlhandler.filesavedirectory TKW_ROOT/config/SPINE_ITKTrunk_Client/simulator_saved_messages/EbXml
tks.spinetools.messaging.defaultdistributionenvelopehandler.filesavedirectory TKW_ROOT/config/SPINE_ITKTrunk_Client/simulator_saved_messages/ITKtrunk
tks.spinetools.messaging.defaultsynchronousresponsehandler.filesavedirectory TKW_ROOT/config/SPINE_ITKTrunk_Client/simulator_saved_messages/Sync
# "SvcIA" service-qualified interaction id, may not be null
tks.spinetools.transmit.svcia	urn:nhs:names:services:pdsquery:QUPA_IN000008UK05
# ODS code, may not be null
tks.spinetools.transmit.ods	YEA
# ASID used as an additional filter if not null
tks.spinetools.transmit.asid	031528597011
# Party key used as an additional filter if not null
tks.spinetools.transmit.partykey YEA-801248
# Period in seconds to wait to allow asynchronous responses to arrive before TKW shuts the handler
tks.spinetools.messaging.asynchronouswaitperiod 30
# Yes/No to use the payload as a 3rd MIME part attachment in an ebXML message pattern. This is primarily intended to be used 
# for ITKTrunk messages
tks.spinetools.messaging.payloadasattachment No
#Set up properties for SpineTools to work in correspondence mode and respond with business and/or infrastructure acknowledgements
tks.spinetools.itktrunk N
tks.spinetools.correspondence.client N
# Properties to populate the sender details in the business and infrastructure acknowledgements
tks.spinetools.desender.auditidentity urn:nhs-uk:identity:AAA:test:cdaresponder
tks.spinetools.desender.senderaddress urn:nhs-uk:addressing:ods:AAA:test:cdaresponder
#property to force a negative bus ack in response when acting as a host
tks.spinetools.busack.positiveresponsetype y
tks.spinetools.busack.nack.errorcode Example 1000
tks.spinetools.busack.nack.errortext Example error
tks.spinetools.busack.nack.diagnostictext diagnostic text
#property to force a negative inf ack in response when acting as a host
tks.spinetools.infack.positiveresponsetype y
tks.spinetools.infack.nack.errorcode Example 1000
tks.spinetools.infack.nack.errortext Example error
tks.spinetools.infack.nack.diagnostictext diagnostic text
#property to force SpineTools to respond back with a negative ebXML ack and do no further processing - only available when SpineTools is executing in TESTHARNESS mode
tks.spinetools.connection.negativeebxmloverride n
#property to force a soapFault response to incoming requests - only available when SpineTools is executing in TESTHARNESS mode
tks.spinetools.connection.soapfault n
#property to force the every second incoming message connection to timeout. This supports exception testing of the incoming ITK Trunk(infratsructure Ack) forcing the 202 response to timeout. 
#This must be set in conjunction with asynchronouswaitperiod property which should be set to a typical HTTP timeout period e.g. 30 seconds.   - only available when SpineTools is executing in TESTHARNESS mode
tks.spinetools.syncresponsecountdown n
#property to force a configurable pause in seconds before SpineTools responds asynchronously - only available when SpineTools is executing in TESTHARNESS mode
tks.spinetools.asyncresponsedelaycountdown n
#property to configure the pause in seconds before SpineTools responds asynchronously - only available when SpineTools is executing in TESTHARNESS mode
tks.spinetools.asynchronousebxmlreply.delay 10
# XML ENCRYPTION:
# Reading an encrypted message:
# A pool of encrypting certificates is defined and each certificate property name is appended by an arbitary number from 0..n
# The certificate alias is used for referencing. The signing certificate is a special case and the property name is defined here using
# the appendage: .signing
# When an encrypted message is read, the loaded certificates are retreived by subject reference in the code
#
# Writing an encrypted message
# Each payload of a distribution envelope can be defined to be encrypted (with 1 or more certificates), compressed, base64 encoded,or signed 
# Payload definintions are made and the urls for each is appended with an arbitary reference number from 0..n. Each payload definition has boolean 
# flags for compression, signing and base64 encoding and a definition of certificates to be used to encrypt the payload. This is a 1..n list of alias
# references separated by commas, without whitespace. If a payload is to be unencrypted the reserved alias of "NONE" should be used alone
# The payloadwritelist is a list of cross reference (using the arbitary payload reference numbers) to each of the payload definitions. When TKW writes
# the Distribution envelope, it chooses the first entry from the payloadwritelist and uses this definintion to encrpyt/code/compress/sign as necessary.
# If there are more definintions in the payloadwritelist than payloads in a Distribution Envelope TKW will iteratively use the definitions until it
# has written all the payloads. If there are more payloads to be written than entries in the payloadwritelist then TKW will loop to the beginning
# of the list. In this way payloads can be selectively and programmably encrpted/encoded/compressed signed.
#
tks.xmlencryption.enable	no
#
#
tks.xmlencryption.payloadwritelist 0
#
# Payload definition:0
tks.xmlencryption.encrypt.ref.compress.0 Yes
tks.xmlencryption.encrypt.ref.b64.0 No
tks.xmlencryption.encrypt.ref.sign.0 No
tks.xmlencryption.encrypt.ref.alias.0 NONE
#
# Validator config file, directories and check classes
#
tks.validator.config TKW_ROOT/config/SPINE_ITKTrunk_Client/validator_config/TMS.conf
tks.validator.source	TKW_ROOT/config/SPINE_ITKTrunk_Client/messages_for_validation
tks.validator.reports	TKW_ROOT/config/SPINE_ITKTrunk_Client/validator_reports
#
# Additional Port names for the request handlers (These are in addition to those loaded from the internal properties)
#
tks.HttpTransport.namelist spinesyncsoap1 spinesyncsoap2 spineasyncsoap1 spineasyncsoap2 spineasyncsoap3 rulesetchange
#
# And then the definitions needed by each of these
tks.HttpTransport.spinesyncsoap1.class	org.warlock.tk.handlers.SpineSynchronousSoapRequestHandler
tks.HttpTransport.spinesyncsoap1.path	/syncservice-pds/pds
tks.HttpTransport.spinesyncsoap2.class	org.warlock.tk.handlers.SpineSynchronousSoapRequestHandler
tks.HttpTransport.spinesyncsoap2.path	/syncservice-lrs/acf
tks.HttpTransport.spineasyncsoap1.class	org.warlock.tk.handlers.SpineAsynchronousSoapRequestHandler
tks.HttpTransport.spineasyncsoap1.path	 /reliablemessaging/reliablerequest
tks.HttpTransport.spineasyncsoap2.class	org.warlock.tk.handlers.SpineAsynchronousSoapRequestHandler
tks.HttpTransport.spineasyncsoap2.path	 /reliablemessaging/forwardreliable
tks.HttpTransport.spineasyncsoap3.class	org.warlock.tk.handlers.SpineAsynchronousSoapRequestHandler
tks.HttpTransport.spineasyncsoap3.path	 /reliablemessaging/queryrequest
tks.HttpTransport.rulesetchange.class	org.warlock.tk.handlers.HTTPPostSimulatorRulesetHandler
tks.HttpTransport.rulesetchange.path	 /rulesetchange
#
# Spine validator check type handler mapping
tks.validator.check.schema	org.warlock.tk.internalservices.validation.spine.SpineSchemaValidator
tks.validator.check.ebxml_xslt	org.warlock.tk.internalservices.validation.spine.XsltValidator
tks.validator.check.hl7_xslt	org.warlock.tk.internalservices.validation.spine.XsltValidator
tks.validator.check.soap_xslt	org.warlock.tk.internalservices.validation.spine.XsltValidator
tks.validator.check.ebxml_xpathexists	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathexists	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathexists	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.attachment1_xpathexists	org.warlock.tk.internalservices.validation.XpathAssertionValidator
tks.validator.check.ebxml_xpathnotexists	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathnotexists	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathnotexists	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathequals	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathequals	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathequals	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathnotequals	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathnotequals	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathnotequals	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathcontains	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathcontains	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathcontains	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathnotcontains	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathnotcontains	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathnotcontains	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathmatches	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathmatches	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathmatches	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.attachment1_xpathmatches	org.warlock.tk.internalservices.validation.XpathAssertionValidator
tks.validator.check.ebxml_xpathnotmatches	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathnotmatches	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathnotmatches	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathcompare	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathcompare	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathcompare	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathnotcompare	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathnotcompare	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathnotcompare	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathnotequalsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathnotequalsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathnotequalsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathequalsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathequalsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathequalsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathnotcontainsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathnotcontainsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathnotcontainsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.ebxml_xpathcontainsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.hl7_xpathcontainsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.soap_xpathcontainsignorecase	org.warlock.tk.internalservices.validation.spine.XpathAssertionValidator
tks.validator.check.attachment1_xpathin	org.warlock.tk.internalservices.validation.XpathAssertionValidator
#
# END
